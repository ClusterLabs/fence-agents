#!/bin/sh
#
# fence_virtd - Virtual Machine Fencing host daemon
#
# chkconfig:   2345 98 01
# description: Fence_virtd is a fencing host daemon which routes fencing \
#              requests from clusters of virtual machines to various \
#              management layers.
#

### BEGIN INIT INFO
# Provides: fence_virtd
# Required-Start: $network
# Required-Stop: 
# Should-Start: libvirtd
# Should-Stop: 
# Default-Start: 
# Default-Stop: 
# Short-Description: start and stop fence_virtd
# description: Fence_virtd handles fencing requests from VMs
### end init info

# Source function library.
. /etc/rc.d/init.d/functions

#
# Macros generated by configure
#
prog="fence_virtd"
prefix="@prefix@"
exec_prefix="@exec_prefix@"
exec="@sbindir@/$prog"
initconfdir="@initconfdir@"

[ -e $initconfdir/$prog ] && . $initconfdir/$prog
[ -z "$FENCE_VIRTD_ARGS" ] && FENCE_VIRTD_ARGS="-w"

lockfile=/var/lock/subsys/$prog

start() {
    [ -x $exec ] || exit 5
    [ -f $config ] || exit 6
    echo -n $"Starting $prog: "
    daemon $exec $FENCE_VIRTD_ARGS
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc $prog
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?

